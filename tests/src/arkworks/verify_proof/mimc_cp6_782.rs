use super::*;
use ark_cp6_782::{Fr, CP6_782};

#[test]
pub fn test_cp6_782_groth16() {
    test_mimc_groth_17::<CP6_782>();
}

#[test]
pub fn test_cp6_782_verify() {
    let proof = "f77e91cef736ee1cd9b7658315cfdbfbef95d56d2fa6d652454546a11bc903f5cd7f3d04318311b851cdecfb6a68aa299d0ac1ff5c41b3c85d7945c37f65b184a1c108532488cff65b5e050e8a117639a292515e42dddc2282352c36eb6b0b1f6789d3b56af4332486e353cee922e32a7213a3dbc46dab1de1803bddc3af6c3b6de6db54ad3808cb0a1b030a14edf903ad733889c4ac44e3ddf278b993d8dd71310d1c875a81b8ca83fffceca19c9e30b007a09d331398de7e0df71fae8ec2d80a6fc936b0ca1f7dbed89a490bf38334457cc3690390469f1dba7a9f7ec8eeb74cdac22feea8bc6b8edc5392426d7bf8bb8e75e3f94c04636a89fe6cd218d1ac9d74d259fd6bcdfa6a55a5bd4e8beb90d374fcbae23f071299a5b1ba8e264a46a69e00ace120c538d2e0fa79a3aff7af0b59d444e7a00910265e1594fe7c5401d65c6116d60b46fe964f7cf2008a96a2d83de1bffa065c61fd0ee9258ec1d5fe54011549c878a08ef335fdabdf9740a85c72114da339809512745e28f6fa6271b2c01c0253dae19e5a03f7a80644e97fc1c64a5aef05a25e1fe6a1c07089af79aff484eff07626ce6f36462a752f7191b1e702dc60e496ad038a60e913e2e3642c0c8e089b3a274ca9aad4fd264e0928641e2c3bddd92d83ce7a07f8a5886592a13c2623ba715b81362a";
    let vk = "35e3dea242b0c3cdda2e8a3b0a4b901811d69d1d466d2cc07ae3082bbc3a9c67e07fa27809c3cdceeb7352fe833bf77dd221c3508bd88e24c573b7336104fc242b487c7985f7be1bf98da87ffd66482c1a96eed8af743aaebe296d3ad2a08486efabc5a253cc7eb998c104b193531cd7b713757ee123f63b53dc2366a81365d9b1f7e3eb25af832505e4776261aa487cacd46f4edfb43f556a767ed77fe1d5cf7b5ad7226b81a431f5a2fcd363a131d26f60b0e3a4bfdc94ed8220d917d1359c7ceb782129084959c64014f42418e2a25e487e0bd05a3a84db9fcc66f761aa19261e6319063ea1af5bd7ca1e615679d031a0615446290053b8afc46efb35a28bd1d2ea959de350b11fcd90d0778a36c3a93e2bdc47ba40c4d23d20e6ab3da584e1a0093b5c1d06ccbc6c97f2c2199625181fc65459cebc6ef92244bd69457090a3259a0df9d4a7da67413ec23248385bbdeee6146b49bde117b99d14549dd0156a54005f48b7d67971b88a0e21faa4670ddce10a7bc59a6c2e5fa49f5d764c2e34bce2b42e2cb507e7d7500319b8172c363344e454fc7a98b63434c7aad7c6b95a149ac3654bb4594b4dfcc6ac217c5b2f4748b70eecac7a42125332063cb8293f9e6915073557fc39d21a9cbc2b07e211948553b00cb385318a9879a632b01343cf5d1b1bf438f52807da4107f784023629cf487e70826f0577e0ac24a4d4f55bd38de553c997b7d42c3406ddd1cd912576e15c09688b3e8f13ec9793dfadc54bcc094c9f178fd311ef0ea5b658c07d8db82995d2a0db84a92bc90fafb359d8d8dfedc3be44379539106c04e939926c00c1209e8bd773750f7912e41a4af0629e60935193f207e9369f6eab458db8613e3dab560b0f4a379ca5deaade0c20a545ed63c2f41949b8e91f3ba39a2cfe0ea88d874268bb64831e9bf1575c4e19a550156336e46a711a7414af37d4015c355a27626a9c17a0cec016248fff40d918d7ce107f8610181717ff082ec0c607cd7aa66b285581a8ee04fde7330e8b64077ca0d653d30e8a75b94b95e979b77874d5513f2edf83e1a19e881cd770856cc77dbd13d79c6db397f4b8935f47d70c1cc55b26461ff731b6083453ef1a038456be49a38c18e816cfe41b44c96534ad1fe395aae9c6f02770e9692ff3f421d72b6b8f73662bb8e8f57654cf553157a87b306cffc1aaf04b91a605e4f82de78ea94275c1f7abf5f3e3b65dc7c6522e40c4da2e94664d44979b9f11cee139dba7ffaa36088d0ed6b43288dcd1b7a9644646e6a28e242050d04d6cfa03d3fd063a2cd451e79111c67148e75aeec60898d781f854a516c7d901b3840dfc9a55b328a23eaf4023bce93640ea0dbf9dbeb15395563d3c8d0200000000000000c48ff48ce582dd0409ce0fb2177bb3a7e4322834bb56e8fb8fc3d50a65572b3a6200b5748635ede9204a0b4e911519067676c85d0768f7a1f6b03445f68ac6f82cbe2d47f10aa57f3e3f8d2d3a43010b60079b70df128becf4518039b80c13ce439a1a8b290c5f2538096fba7a0917d8686fac6ca5e50d6b324eee1687add10707a88c41e32d4178d38bc589017731b8b04377b8898fd468accca55dbd19ebb0b7e82f05fd99b31a18818100d2838c14d584004741ee00b0036ad1ebda8b126e53cd0928";
    let image = "28933fc1b649ded455bd7739026be2bf6f7e1c0acde6dee164724218bbf1391e318017e5a6ab8248bda0bdd1f40b8301";

    let proof_input: Vec<u8> = FromHex::from_hex(proof).unwrap();
    let vk_input: Vec<u8> = FromHex::from_hex(vk).unwrap();
    let image_input: Vec<u8> = FromHex::from_hex(image).unwrap();

    let proof = Proof::<CP6_782>::deserialize(&*proof_input).expect("Proof deserialize fail:");
    let vk = VerifyingKey::<CP6_782>::deserialize(&*vk_input).expect("vk deserialize fail");
    let pvk = PreparedVerifyingKey::<CP6_782>::from(vk);
    let image = Fr::read(&*image_input).unwrap();

    let start = Instant::now();
    assert!(verify_proof(&pvk, &proof, &[image]).unwrap());
}
